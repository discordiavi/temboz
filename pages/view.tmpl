## -*- html -*-
#extends TembozTemplate
#implements respond
########################################################################
##
## Query-string parameters for this page
##   show
##   feed_uid
##   search
##   where_clause
##   offset
##
########################################################################
#from singleton import db
#set c = db.cursor()
#import time, param, filters
#silent filters.load_rules(db, c)
########################################################################
##
## What items to use
##   unread:   unread articles (default)
##   up:       articles already flagged interesting
##   down:     articles already flagged uninteresting
##   filtered: filtered out articles
##   mylos:    read-only view, e.g. http://www.majid.info/mylos/temboz.html
##
########################################################################
#set public = False
#set $show = $getVar('show', 'unread')
#if $show == 'up'
#set item_desc = 'interesting'
#set where_clause = 'item_rating > 0'
#elif $show == 'mylos'
#set public = True
#set item_desc = 'interesting'
#set where_clause = 'item_rating > 0'
#elif $show == 'down'
#set item_desc = 'uninteresting'
#set where_clause = 'item_rating = -1'
#elif $show == 'filtered'
#set item_desc = 'filtered'
#set where_clause = 'item_rating = -2'
#elif $show == 'all'
#set item_desc = 'all'
#set where_clause = 'item_rating is not null'
#else
#set item_desc = 'unread'
#set where_clause = 'item_rating = 0'
#end if
#set params = []
## optimizations for mobile devices
#set mobile = bool($getVar('mobile', False))
########################################################################
##
## Optionally restrict view to a single feed
##
########################################################################
#if $getVar('feed_uid', None)
#set where_clause = where_clause + ' and item_feed_uid=?'
#silent params.append($feed_uid)
#end if
########################################################################
##
## Crude search functionality
##
########################################################################
#if $getVar('search', None)
#if $getVar('search_in', 'title') == 'title'
#set search_where = 'item_title'
#else
#set search_where = 'item_content'
#end if
#set where_clause = where_clause + ' and lower(' + search_where + ') like ?'
#silent params.append('%' + $getVar('search').lower() + '%')
#end if
########################################################################
##
## Preliminary support for offsets to read more than overload_threshold
## articles, not fully implemented yet
##
########################################################################
#set offset = int($getVar('offset', 0))
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><title>Temboz - $item_desc items</title>
<meta name="robots" content="noarchive,noindex,follow,nocache">
########################################################################
##
## This script handle Thumbs up/down using the XMLHttpRequest method
## if available, or by loading a pixel (less reliable) otherwise.
## XXX doesn't use XMLHttpRequest on IE6 as coded here
##
########################################################################
<script language="JavaScript" src="temboz.js"></script>
<script language="JavaScript">
hidden = Array();
#if public
#set img_prefix = 'images/'
#set overload_threshold = 50
function webop(op, uid) {
  ; // don't do anything about up/down yet
}
#else
#set overload_threshold = param.overload_threshold
#set img_prefix = ''
var i = new Image();
function webop(op, uid) {
  $.get('/xmlfeedback/' + op + '/' + Math.random().toString().substring(8) + '/' + uid + '.xml');
}
#end if
## get user selection, empty string if none or unsupported browser
function get_selection() {
  var userSelection;
  userSelection = "";
  if(window.getSelection) {
    userSelection = String(window.getSelection());
  } else if (document.selection) {
    userSelection = document.selection.createRange().text;
  }
  return jQuery.trim(userSelection);
}
function kw_dialog(id, kw) {
  var tmpl = \$("div#kw_form_tmpl");
  var body = '<div title="Add a keyword rule">' + tmpl.html() + '</div>';
  body = body.replace(/__item_uid__/, id);
  body = body.replace(/__feed_title__/, \$('#feed' + id + ':first').text());
  \$(body).dialog({
    buttons: {
      "Add": function() {
        \$(this).find("form").ajaxSubmit();
        \$(this).dialog("destroy");
      },
      "Cancel": function() {
        \$(this).dialog("destroy");
      }
    },
    width: 500,
    height: 250,
##    modal: true,
##    overlay: {
##      opacity: 0.5,
##      background: "black"
##    }
  }).find(":text").val(kw);
  if(kw.search(" ") != -1 || kw.search("-") != -1) {
    \$('.ui-dialog-content select[@name="match"]').val('phrase_lc');
  }
}
## hide tag layer until it is ready
#set taglayer_visibility = "none"
function hide(id) {
  var elt = document.getElementById('art' + id);
  if(elt.style.backgroundColor == "yellow") {
    elt.style.backgroundColor = "";
    webop('basic', id);
    if(elt.taglayer) {
      elt.taglayer.style.display = "none";
    }
  } else {
    var kw = $.trim(get_selection());
    if(kw!="") {
      kw_dialog(id, kw);
    }
    hidden[hidden.length] = elt;
    elt.style.display = "none";
    webop('demote', id);
  }
}
function collapseToggle(id) {
  var elt = document.getElementById('content' + id);
  if(elt.style.display != "none") {
    elt.style.display = "none";
    document.getElementById('ctarrow' + id).innerHTML = '<img width="14" height="14" alt="hidden" src="<%=img_prefix%>a_rt.gif" />&nbsp;';
  } else {
    elt.style.display = "block";
    document.getElementById('ctarrow' + id).innerHTML = '<img width="14" height="14" alt="hidden" src="<%=img_prefix%>a_dn.gif" />&nbsp;';
  }
}
function highlight(id) {
  var elt = document.getElementById('art' + id);
  elt.style.backgroundColor = "yellow";
  webop('promote', id);
  if(!elt.taglayer) {
    var c = document.getElementById('content' + id);
    elt.taglayer = document.createElement("div");
    elt.taglayer.className = "overlay";
    elt.taglayer.innerHTML = '<form id="tags' + id + '"><div class="translucent"><textarea id="notes" rows="4" cols="64"></textarea><br><textarea id="tags" rows="1" cols="64"></textarea></div><div class="opaque"><input type="submit" value="save"><a href="">Opaque link</a></div></form>';
    c.insertBefore(elt.taglayer, c.firstChild);
## XXX get rid of this once taglayer is made visible
    elt.taglayer.style.display = "$taglayer_visibility";
  } else {
    elt.taglayer.style.display = "$taglayer_visibility";
  }
}
function unhide_all() {
  for(i=0; i<hidden.length; i++) {
    elt = hidden[i];
    elt.style.display = "block";
    webop('basic', elt.id.substring(3));
  }
  hidden = Array();
}
function unhide_last() {
  if(hidden.length > 0) {
    elt = hidden[hidden.length - 1];
    elt.style.display = "block";
    webop('basic', elt.id.substring(3));
    hidden.length = hidden.length - 1
  }
}
function toggle(item) {
  document.items[item].checked = !document.items[item].checked;
}
#if getattr(param, 'thumbs_bottom', False)
## see:
## http://www.quirksmode.org/viewport/compatibility.html
cached_window_height = null;
function window_height() {
  var window_height;

  if (cached_window_height) {
    return cached_window_height;
  }
  if (self.innerHeight) {
    window_height = self.innerHeight;
  } else if (document.documentElement && document.documentElement.clientHeight) {
    window_height = document.documentElement.clientHeight;
  } else if (document.body) {
    window_height = document.body.clientHeight;
  } else {
    alert(document.body);
  }
  cached_window_height = window_height;
  return window_height;
}
function repeat_headline() {
  var article, content;
  article = document.body.lastChild.lastChild;
  content = article.childNodes[1];
  if(content.offsetHeight && content.offsetHeight > 0.8 * window_height()) {
    document.write('<p align="right">');
    document.write(article.childNodes[0].firstChild.innerHTML);
    document.write('</p>');
  }
}
#end if
</script>
########################################################################
##
## If show=mylos, we switch to a special read-only view of the last 50
## (by default) items
##
########################################################################
#if public
<link rel="stylesheet" type="text/css" href="gems/temboz.css">
<p class="menu">This page is produced automatically from my RSS aggregator, <a
href="http://www.temboz.com/">Temboz</a>. It shows the last 50 articles from
the feeds in blogroll I found interesting. Clicking the "thumbs up" icons will
highlight the article, clicking "thumbs down" will make it disappear (or
cancel the highlight if highlighted).</p>
#else
<link rel="stylesheet" type="text/css" media="screen" href="temboz.css">
<link rel="stylesheet" type="text/css" media="print" href="temboz.css?media=print">
#end if
## work-around IE's defective position: fixed
## see also: http://www.enorg.org/faq/csshacks.html
<!--[if IE]>
<style type="text/css">
body.unpadded {
  margin-top: 0px;
}
div.menu {
  margin-top: 0px;
  padding-top: 0px;
}
.col1, .col2 {
  top: 1cm;
}
</style>
<![endif]-->
</head>
<body class="unpadded">
########################################################################
##
## Support for arbitrary where clauses in the view script. Not directly
## accessible from the UI
##
########################################################################
#if $getVar('where_clause', False)
#set where_clause = where_clause + ' and ' + $getVar('where_clause')
#end if
########################################################################
##
## Update the view timestamp
##
########################################################################
#silent c.execute("""update fm_items set item_viewed=julianday('now') where item_uid in (select item_uid from fm_items where """ + where_clause + """
order by item_created DESC, item_uid DESC
limit ? offset ?)""", params + [overload_threshold, offset])
#silent c.execute("""select count(*) from fm_items where """ + where_clause, params)
########################################################################
##
## We try to get a balanced two-column design by having as many articles
## on either side. Very long articles will unbalance the flow, but this
## works reasonably well in practice.
##
########################################################################
#set num_items = int(c.fetchone()[0])
#set cutoff = (num_items + 1) / 2 + 1
#set count = 0
#if not mobile
<div id="menu" class="menu">
#if not public
<form method="GET" action="view" target="_blank" class="menu">
#end if
<p class="menu">$num_items $item_desc
#if num_items > overload_threshold
($overload_threshold shown)
#set cutoff = (overload_threshold + 1) / 2 + 1
#end if
&nbsp;&nbsp;<a href="javascript:unhide_all();">Unhide all</a>&nbsp;&nbsp;<a href="javascript:unhide_last();">Unhide last</a>
#if public
</p>
#else
&nbsp;&nbsp;<a href="feeds">All feeds</a>&nbsp;&nbsp;<a href="add">Add feed</a>&nbsp;&nbsp;<a href="rules">Filters</a>&nbsp;&nbsp;
########################################################################
##
## Crude search functionality
##
########################################################################
#if $getVar('feed_uid', None)
<input name="feed_uid" type="hidden" value="$feed_uid">
#end if
<input name="show" type="hidden" value="$show">
<input name="search" value="$getVar('search', '')">
<select name="show">
<option value="all" selected>All articles</option>
<option value="unread">Unread only</option>
<option value="down">Uninteresting only</option>
<option value="up">Interesting only</option>
<option value="filtered">Filtered only</option>
</select>
<select name="search_in">
<option value="title" selected>in titles</option>
<option value="content">in content</option>
</select>
<input type="submit" value="Search"></p></form>
#end if
</div>
#else
#set overload_threshold = 50
#end if
########################################################################
## Form used for adding keyword filtering rules
########################################################################
#if not public
<div id="kw_form_tmpl" style="display:none">
<form name="kw_form" method="GET" action="/add_kw_rule">
<table>
<tr><td>Keyword</td><td><input name="kw" size="30"></td></tr>
<tr><td>Match type</td><td><select name="match">
<option value="word" selected>Any words</option>
<option value="all">All words</option>
<option value="phrase_lc">Phrase</option>
<option value="phrase">Phrase (case-sensitive)</option>
</select></td></tr>
<tr><td>Match on</td><td><select name="target">
<option value="union" selected>Title or content</option>
<option value="title">Title only</option>
<option value="content">Content only</option>
</select></td></tr>
<tr><td>For <em>__feed_title__</em> only</td><td>
<input name="feed_only" type="checkbox">
<input name="item_uid" type="hidden" value="__item_uid__"></td></tr>
##<tr><td>Apply retroactively</td><td><input name="retroactive" type="checkbox"></td></tr>
</table>
</form>
</div>
#end if
########################################################################
##
## Fetch overload_threshold (default 200) items
##
########################################################################
#silent c.execute("""select item_uid, item_creator, item_title, item_link,
item_content, datetime(item_loaded), date(item_created), feed_uid,
feed_title, feed_html, feed_xml, julianday('now') - julianday(item_created),
item_rating, item_rule_uid
from fm_items, fm_feeds where item_feed_uid=feed_uid
and """ + where_clause + ' and feed_private = 0' * public + """
order by item_created DESC, item_uid DESC
limit ? offset ?""", params + [overload_threshold, offset])
#if not mobile
<div id="col1" class="col1">
#end if
#for uid, creator, title, link, content, loaded, created, feed_uid, feed_title, feed_html, feed_xml, delta_created, rating, filtered_by in c
#set count += 1
#if count == cutoff
## this empty paragraph prevents the right column from resizing when all items
## in the left column are dismissed
<p></p>
#if not mobile
</div><div id="col2" class="col2">
#end if
#end if
########################################################################
##
## URL to use for the article title link
## we are not doing any logging yet, no point for an unnecessary redirect
##
########################################################################
## disabled for now: #set redirect = '/redirect/' + `uid`
#set redirect = link
#set since_when = self.since(delta_created)
#set creator = creator.replace('"', '\'')
########################################################################
##
## Actual article display
##
########################################################################
#if public
#set $feed_link = ""
#else
#set $feed_link = 'onclick="location.href(\'feed_info?feed_uid=%d\');"' % feed_uid
#end if
#if rating == -2
  #if filtered_by
    #set rule = filters.Rule.registry.get(filtered_by)
    #if rule
      #set title = rule.highlight_title(title)
      #set content = rule.highlight_content(content)
    #end if
  #elif filtered_by == 0
    #set content = content + '<br><p>Filtered by feed-specific Python rule</p>'
  #end if
#end if
<div class="article" id="art$uid"><div class="headline"><span
class="buttons"><img width="32" height="32" alt="down"
src="<%=img_prefix%>down.gif" class="down" onclick="hide('$uid')"
/><img width="32" height="32" alt="up" src="<%=img_prefix%>up.gif" class="up"
onclick="highlight('$uid')" /></span><span class="ctarrow" id="ctarrow$uid" onclick="collapseToggle('$uid')"><img width="14" height="14" alt="hidden" src="<%=img_prefix%>a_dn.gif" />&nbsp;</span><a href="<%=redirect%>" class="headline"
target="_blank" title="by $creator, cached at $loaded">$title</a><br><a
href="feed_info?feed_uid=$feed_uid" title="" class="source screen" id="feed$uid">$feed_title</a><a href="$feed_html" title="" class="source print" id="feedprint$uid">$feed_title</a>
$since_when
#if not public
<a href="edit?uid=$uid" class="screen">edit</a>
#end if
<br></div><div class="content" id="content$uid">
$content
</div>
#if getattr(param, 'thumbs_bottom', False)
## insert buttons at the bottom of long articles so users don't have to scroll
## all the way back up
<script language="JavaScript">
repeat_headline();
</script>
#end if
</div>
#end for
#if not mobile
</div>
#end if
#silent db.commit()
#silent c.close()
########################################################################
##
## If we want to put stuff at the page footer, make sure we do not collide
## with either column
##
########################################################################
<div style="clear: both;" />
</body></html>
