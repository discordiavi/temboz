#block ENTIRE_PAGE
<!DOCTYPE HTML>
#extends menubar
#implements respond
########################################################################
##
## Query-string parameters for this page
##   show
##   feed_uid
##   search
##   where_clause
##
########################################################################
#from singleton import db
#set c = db.cursor()
#import time, param, filters, update
#silent filters.load_rules(db, c)
## width below which a single-column layout is shown
#set $TWOCOL_WIDTH = 760
########################################################################
##
## What items to use
##   unread:   unread articles (default)
##   up:       articles already flagged interesting
##   down:     articles already flagged uninteresting
##   filtered: filtered out articles
##   mylos:    read-only view, e.g. http://www.majid.info/mylos/temboz.html
##
########################################################################
#set global $show = $getVar('show', 'unread')
#set global $ratings = update.ratings
#set $ratings_dict = dict(($ratings[i][0], i) for i in range(len($ratings)))
#set $i = $ratings_dict.get($show, 1)
#set global $show      = $ratings[$i][0]
#set global $item_desc = $ratings[$i][1]
#set global $where     = $ratings[$i][3]
#set global $sort = $getVar('sort', 'seen')
#set global $sorts = update.sorts
#set $i = update.sorts_dict.get($sort, 1)
#set global $sort      = $sorts[$i][0]
#set global $sort_desc = $sorts[$i][1]
#set global $order_by  = $sorts[$i][3]
#block EXTRA_WHERE_CLAUSE
#end block
#if $show == 'filtered'
  #set rule_uid = $getVar('rule_uid', None)
  #if rule_uid
    #set global $where = $where + ' and item_rule_uid=' + rule_uid
  #end if
#end if
#if $getVar('min', '')
  #set global $where = $where + ' and item_uid >= ' + $min
#end if
#if $getVar('max', '')
  #set global $where = $where + ' and item_uid <= ' + $max
#end if
##
#set params = []
## optimizations for mobile devices
#set mobile = bool($getVar('mobile', False))
########################################################################
##
## Optionally restrict view to a single feed
##
########################################################################
#if $getVar('feed_uid', None)
#set global $where = $where + ' and item_feed_uid=?'
#silent params.append($feed_uid)
#end if
########################################################################
##
## Crude search functionality
##
########################################################################
#if $getVar('search', None)
  #if $getVar('search_in', 'title') == 'title'
    #set search_where = 'item_title'
  #else
    #set search_where = 'item_content'
  #end if
  #set global $where = $where + ' and lower(' + search_where + ') like ?'
  #if type($getVar('search')) == unicode
    #silent params.append('%' + $getVar('search').lower().encode('ascii', 'xmlcharrefreplace') + '%')
  #else
    #silent params.append('%' + $getVar('search').lower() + '%')
  #end if
#end if
########################################################################
##
## Preliminary support for offsets to read more than overload_threshold
## articles, not fully implemented yet
##
########################################################################
#set offset = int($getVar('offset', 0))
<html>
<head>
########################################################################
$CSS
<style>
input#stem {
  background-color: #FFFFCC;
}
</style>
<title>Temboz - $item_desc items</title>
<meta name="robots" content="noarchive,noindex,follow,nocache">
<meta name="viewport" content="initial-scale=1.0">
########################################################################
##
## This script handle Thumbs up/down using the XMLHttpRequest method
## if available, or by loading a pixel (less reliable) otherwise.
## XXX doesn't use XMLHttpRequest on IE6 as coded here
##
########################################################################
#block TEMBOZ_JS
<script src="temboz.js"></script>
#end block
<script>
hidden = Array();
#block SET_OVERLOAD_THRESHOLD
#set global $overload_threshold = param.overload_threshold
#set global $img_prefix = ''
var i = new Image();
function webop(op, uid) {
  $.get('/xmlfeedback/' + op + '/' + rand() + '/' + uid + '.xml');
}
#end block
function refresh_counter() {
  var articles = \$("div.article:visible");
  if(articles.size() < $overload_threshold) {
    \$("b#count").html(String(articles.size()));
  } else {
    \$("b#count").html(String(articles.size()) + "+");
  }
  return articles;
}
function set_context(context) {
  if (context == "word") {
    \$('.ui-dialog-content input[name="stem"]').show();
    \$('.ui-dialog-content input[name="kw"]').hide();
  } else {
    \$('.ui-dialog-content input[name="stem"]').hide();
    \$('.ui-dialog-content input[name="kw"]').show();
  }
  if (context == "tag" || context == "author") {
    \$('.ui-dialog-content select[name="target"]').hide();
    \$('.ui-dialog-content td:first').html(capitalize(context));
  } else {
    \$('.ui-dialog-content select[name="target"]').show();
    if(context == "word") {
      \$('.ui-dialog-content td:first').html("Keyword");
    } else if(context == "exactword") {
      \$('.ui-dialog-content td:first').html("Keyword");
    } else if(context == "all") {
      \$('.ui-dialog-content td:first').html("Keywords");
    } else {
      \$('.ui-dialog-content td:first').html("Phrase");
    }
  }
}
function kw_dialog(id, kw, context) {
  var tmpl = \$("div#kw_form_tmpl");
  var body = '<div title="Add a keyword rule">' + tmpl.html() + '</div>';
  body = body.replace(/__item_uid__/, id);
  body = body.replace(/__feed_title__/, \$('#feed' + id + ':first').text());
  \$(body).appendTo("body").dialog({
    buttons: {
      "Add": function() {
        \$(this).find("form").ajaxSubmit();
        \$(this).dialog("destroy");
      },
      "Cancel": function() {
        \$(this).dialog("destroy");
        \$(this).remove();
      }
    },
    width: 500,
    height: 250
##    modal: true,
##    overlay: {
##      opacity: 0.5,
##      background: "black"
##    }
  }).find(":text").val(kw);
  \$('.ui-dialog-content input[name="kw"]').hide();
  \$.get("/stem", {"q": kw}, function(data) {
    \$('.ui-dialog-content input[name="stem"]').val(\$.trim(data));
  });
  \$('.ui-dialog-content select[name="match"]').change(function() {
    var context = \$(this).val();
    set_context(context);
  })
  if(kw.search(" ") != -1 || kw.search("-") != -1) {
    \$('.ui-dialog-content select[name="match"]').val('phrase_lc');
    set_context("phrase_lc");
  } else {
    if (!context) {
      \$('.ui-dialog-content input[name="kw"]').hide();
    }
  }
  if(context) {
    \$('.ui-dialog-content select[name="match"]').val(context.toLowerCase());
    \$('.ui-dialog-content select[name="target"]').hide();
    \$('.ui-dialog-content :checkbox').val(["feed_only"]);
    \$('.ui-dialog-content :checkbox').prop("checked", true);
    \$('.ui-dialog-content td:first').html(context);
    set_context(context);                       
  }
}
function hide(id) {
  var elt = document.getElementById('art' + id);
  if(elt.style.backgroundColor == "yellow") {
    elt.style.backgroundColor = "";
    webop('basic', id);
    refresh_counter();
  } else {
    var kw = \$.trim(get_selection());
    hidden[hidden.length] = elt;
    elt.style.display = "none";
    if(kw!="" && elt.innerHTML.indexOf(kw)!=-1) {
      kw_dialog(id, kw);
    } else {
      var tags = \$(elt).find("span.author.tag.highlighted").html();
      if(tags) {
        kw_dialog(id, tags, 'Author');
      } else {
        var tags = \$(elt).find("span.item.tag.highlighted").html();
        if(tags) {
          kw_dialog(id, tags, 'Tag');
        }
      }
    }
    webop('demote', id);
    refresh_counter();
  }
}
function collapseToggle(id) {
  var elt = document.getElementById('content' + id);
  if(elt.style.display != "none") {
    elt.style.display = "none";
    document.getElementById('ctarrow' + id).innerHTML = '<img width="14" height="14" alt="hidden" src="${img_prefix}a_rt.gif" />&nbsp;';
  } else {
    elt.style.display = "block";
    document.getElementById('ctarrow' + id).innerHTML = '<img width="14" height="14" alt="hidden" src="${img_prefix}a_dn.gif" />&nbsp;';
  }
}
function toggle_tags(id) {
  \$("div#tags_" + id).toggle();
}
function toggle_tag() {
  \$(this).toggleClass("highlighted");
}
function highlight(id) {
  var elt = document.getElementById('art' + id);
  elt.style.backgroundColor = "yellow";
  webop('promote', id);
  refresh_counter();
}
function unhide_all() {
  for(i=0; i<hidden.length; i++) {
    elt = hidden[i];
    elt.style.display = "block";
    webop('basic', elt.id.substring(3));
    refresh_counter();
  }
  hidden = Array();
}
function unhide_last() {
  if (hidden.length > 0) {
    elt = hidden[hidden.length - 1];
    elt.style.display = "block";
    webop('basic', elt.id.substring(3));
    refresh_counter();
    hidden.length = hidden.length - 1
  }
}
function undo(event) {
  if (event.alreadyHandled) {
    return;
  }
  unhide_last();
  event.alreadyHandled = true;
}
function toggle(item) {
  document.items[item].checked = !document.items[item].checked;
}
function assign_column() {
  var height = \$(this).height();
  var left = \$("div#col1").height();
  var right = \$("div#col2").height();

  if(Math.abs(left + height - right) > Math.abs(right + height - left)) {
    \$(this).appendTo("div#col2");
  } else {
    \$(this).appendTo("div#col1");
  }
}
\$(document).ready(function() {
  \$("span.tag").click(toggle_tag);
  \$(document).bind("keydown", "ctrl+z", undo);
  \$(document).bind("keydown", "meta+z", undo);
  \$(document).bind("keydown", "ctrl+meta+z", undo);
  refresh_counter();
  var articles = \$("div.article");
  if(\$("body").width() >= $TWOCOL_WIDTH) {
    articles.each(assign_column);
  }
});
$MENUBAR_JQUERY
init_popups();
</script>
</head>
<body class="unpadded">
########################################################################
##
## Support for arbitrary where clauses in the view script. Not directly
## accessible from the UI
##
########################################################################
#if $getVar('where_clause', False)
#set global $where = $where + ' and ' + $getVar('where_clause')
#end if
########################################################################
#def CONTEXT_MENU
<li><span><b id="count">?</b></span></li>
<li><span class="button"><a href="#">$item_desc</a></span>
  <ul>
  #for (rating_name, rating_desc, discard, discard) in $ratings
    #set $url = trans.change_param(show=rating_name)
    <li><a href="$url">$rating_desc</a></li>
  #end for
  </ul>
</li>
<li><span class="non-iphone">sorted by</span></li>
<li><span class="button"><a href="#">$sort_desc</a></span>
  <ul>
#for (sort_name, sort_desc, discard, discard) in $sorts
  #set $url = trans.change_param(sort=sort_name)
    <li><a href="$url">$sort_desc</a></li>
#end for
  </ul>
</li>
<li><span class="button"><a href="#">More</a></span>
  <ul>
    <li><a href="javascript:unhide_last();">Undo last hide (Ctrl-Z)</a></li>
    <li><a href="javascript:unhide_all();">Undo all hides</a></li>
  </ul>
</li>
#end def
$MENUBAR(trans=trans)
########################################################################
## Form used for adding keyword filtering rules
########################################################################
#block FILTER_FORM_TEMPLATE
<div id="kw_form_tmpl" style="display:none">
  <form name="kw_form" method="GET" action="/add_kw_rule">
    <table>
      <tr><td>Keyword</td>
      <td><input name="kw" id="kw" size="30">
          <input name="stem" id="stem" size="30"></td></tr>
      <tr><td>Match type</td><td><select name="match">
      <option value="word" selected>Any words</option>
      <option value="exactword">Any words (exact match)</option>
      <option value="all">All words</option>
      <option value="phrase_lc">Phrase</option>
      <option value="phrase">Phrase (case-sensitive)</option>
      <option value="author">Author</option>
      <option value="tag">Tag</option>
      </select></td></tr>
      <tr><td>Match on</td><td><select name="target">
      <option value="union" selected>Title or content</option>
      <option value="title">Title only</option>
      <option value="content">Content only</option>
      </select></td></tr>
      <tr><td>For <em>__feed_title__</em> only</td><td>
      <input name="feed_only" type="checkbox">
      <input name="item_uid" type="hidden" value="__item_uid__"></td></tr>
      ##<tr><td>Apply retroactively</td><td><input name="retroactive"
      ## type="checkbox"></td></tr>
    </table>
  </form>
</div>
#end block
########################################################################
##
## Column placeholders will be filled by assign_column after DOM has loaded
##
########################################################################
<div id="col1" class="col1"></div>
<div id="col2" class="col2"></div>
<div style="clear: both;" />
<script language="JavaScript">
if(\$("body").width() < $TWOCOL_WIDTH) {
  document.write('<div id="initial">');
} else {
  document.write('<div id="initial" class="col1">');
}
</script>

########################################################################
##
## Fetch overload_threshold (default 200) items
##
########################################################################
#set tag_dict = update.view_sql(db, c, $where, $order_by, $params, $overload_threshold)
#for uid, creator, title, link, content, loaded, created, rated, delta_created, rating, filtered_by, feed_uid, feed_title, feed_html, feed_xml, feed_snr in c
########################################################################
##
## URL to use for the article title link
## we are not doing any logging yet, no point for an unnecessary redirect
##
########################################################################
## disabled for now: #set redirect = '/redirect/' + `uid`
#set redirect = link
#set since_when = self.since(delta_created)
#set creator = creator.replace('"', '\'')
########################################################################
##
## Actual article display
##
########################################################################
#if rating == -2
  #if filtered_by
    #set rule = filters.Rule.registry.get(filtered_by)
    #if rule
      #set title = rule.highlight_title(title)
      #set content = rule.highlight_content(content)
    #end if
  #elif filtered_by == 0
    #set content = content + '<br><p>Filtered by feed-specific Python rule</p>'
  #end if
#end if
#if $uid in $tag_dict or ($creator and ($creator != 'Unknown'))
## XXX should probably escape the Unicode here
#set $tag_info = ' '.join('<span class="item tag">%s</span>' % t for t in sorted($tag_dict.get($uid, [])))
#if $creator and $creator != 'Unknown'
#set $tag_info = '%s<span class="author tag">%s</span>' % ($tag_info, $creator)
#end if
#set $tag_info = '<div class="tag_info" id="tags_%s">' % $uid + $tag_info + '</div>'
#set $tag_call = '<a href="javascript:toggle_tags(%s);">tags</a>' % $uid
#else
#set $tag_info = ''
#set $tag_call = '(no tags)'
#end if
<div class="article" id="art$uid"><div class="headline"><span
class="buttons"><img width="32" height="32" alt="down"
src="${img_prefix}down.gif" class="down" onclick="hide('$uid')"
/><img width="32" height="32" alt="up" src="${img_prefix}up.gif" class="up"
onclick="highlight('$uid')" /></span><span class="ctarrow" id="ctarrow$uid" onclick="collapseToggle('$uid')"><img width="14" height="14" alt="hidden" src="${img_prefix}a_dn.gif" />&nbsp;</span><a href="<%=redirect%>" class="headline"
target="_blank" title="by $creator, cached at $loaded">$title</a><br><a
href="feed_info?feed_uid=$feed_uid" title="" class="source screen" id="feed$uid">$feed_title</a><a href="$feed_html" title="" class="source print" id="feedprint$uid">$feed_title</a>
#if not $getVar('feed_uid', None)
<a href="view?feed_uid=$feed_uid&show=$show" class="ff" target="_blank">&#9658;</a>
#end if
$since_when
$tag_call
#def ITEM_CONTENT(uid, tag_info, content)
<a href="edit?uid=$uid" class="screen">edit</a>
<br></div>$tag_info
<div class="content" id="content$uid">
$content
</div>
#end def
$ITEM_CONTENT($uid, $tag_info, $content)
</div>
#end for
#silent db.commit()
#silent c.close()
</div>
########################################################################
##
## If we want to put stuff at the page footer, make sure we do not collide
## with either column
##
########################################################################
<div style="clear: both;" />
</body></html>
#end block
